
IMPROVES - 
 TESTS-
  - divide describes into it's
  - run all of the tests from tests.test.ts and not test calling test
  
remove variables from process env

TODO: on ws connection: create a {socketId, socket} and push to db



--------------------------------------------------------------------------------------------------------------
Bugs:
 - enter withpt video but with sound eerors , cant get this user profile image
 - otheruser doesnt render on rejoin. enter video room with no video 
 - if 1 user sharescreen, then another user get in the room he dont see the shared screen
 - errors. enter videoroom with no video 
 - check why user._id in user state (client) doesn't exist all the time.{to check the user after login , register   and refresh(app)-client}.
 - update chosen room acording to realTime changes

--------------------------------------------------------------------------------------------------------------

Features:

extract text from image
change volume to others
mute others

outer room chat
inroom chat

add user as friend
block user

--------------------------------------------------------------------------------------------------------------

Todo:

Error Divs for register and login
Clean UP
test- connection flows for socket and peer
Finish Style

--------------------------------------------------------------------------------------------------------------
Before Deployment

secure aws bucket
ecs
fix https
validation for inputs




--------------------------------------------------------------------------------------------------------------


//  DataConnection:
// ===============

//   //create peer hendlers
//   mypeer.on("connection", (conn) => {
//     conn.on("data", function (data) {
//         console.log("received message from peer connection:", data);
//     });
// });

// //calling all parrticipents
// room.participants?.forEach((roomMate: any) => {
//     console.log(roomMate);
//     const connection = mypeer.connect(roomMate.peerId);
//     connection.on("open", () => {
//         console.log("connecting to", roomMate.peerId);
//         connection.send("Hey, we've just connected");
//     });
// });